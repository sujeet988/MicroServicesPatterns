** What is a Design Pattern?
A design pattern is a standard solution to a common problem in software design.
Think of it like best practices or proven templates you can apply when coding. Instead of reinventing the wheel every time, you use these ready-made "solutions" that experts have refined over time.

In C# (and in general), design patterns help make your code:

Reusable

Scalable

Maintainable

Flexible

** How Many Types of Design Patterns are There?
Broadly, design patterns are divided into three main categories:

Category	Purpose	Examples
Creational	Focus on how objects are created (instantiation).	
Example :Singleton, Factory, Abstract Factory, Builder, Prototype

Structural: 	Focus on how classes/objects are composed to form larger structures.	
Example : Adapter, Decorator, Facade, Proxy, Composite, Bridge

Behavioral	Focus on how objects interact and communicate.	
Example : Observer, Strategy, Command, Iterator, State, Template Method, Mediator

**
Quick Glance at Some Popular Design Patterns in C#:
Pattern				Type			Short Description
Singleton			Creational		Only one instance of a class, globally accessible.
Factory Method		Creational		Create objects without specifying the exact class.
Abstract Factory	Creational		Create families of related objects.
Builder				Creational		Build complex objects step by step.
Prototype			Creational		Clone objects instead of creating from scratch.

Adapter				Structural		Connect two incompatible interfaces.
Decorator			Structural		Add behavior to objects dynamically.
Facade				Structural		Simplify a complex system with a single interface.
Proxy				Structural		Provide a placeholder to control access to an object.

Observer			Behavioral		One-to-many dependency, like event handling.
Strategy			Behavioral		Define a family of algorithms, make them interchangeable.
Command				Behavioral		Encapsulate a request as an object.
State				Behavioral		Allow an object to change its behavior when its internal state changes.
Mediator			Behavioral		Centralize complex communications between classes.
