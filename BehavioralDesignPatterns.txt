Behavioral Design Patterns :
-> Guides how different objects communciate with each other 
effectively  and distribute task efficiently , making software
system flexible  and easy to maintain

There are three recurring themes in these patterns:

Behavioral class patterns use inheritance to distribute behavior between classes.
Behavioral object patterns use object composition rather than inheritance.
Behavioral object patterns are concerned with encapsulating behavior in an object 
and delegating requests to it.

Problme solved by  Behavioral Design Patterns?
It reduces the complexity of communication between the objects.
It provides the best object interaction principles of software development.
It reduces the coupling between the senders and the receivers and enables better communication flexibility in the application.
It is used to save the number of resources being used by an application as better object interaction leads to better task execution.


** Types:
1. State Patterns
2. Oberver pattern
3. Strategy Pattern
4. chain of Responsibility Problems
5  template pattern
6 Interpreter Pattern
7 command Pattern
8 Itertaor Pattern
9 visitor pattern
10 Mediator pattern
11 Momento Pattern

--NOTES:
https://www.c-sharpcorner.com/article/behavioral-design-patterns-in-c-sharp/
https://www.scaler.com/topics/design-patterns/behavioral-pattern/